apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: convention-workload-with-volumes
  annotations:
    ootb.apps.tanzu.vmware.com/servicebinding-workload: "true"
    ootb.apps.tanzu.vmware.com/apidescriptor-ref: "true"
    kapp.k14s.io/change-rule: upsert after upserting servicebinding.io/ServiceBindings
  labels:
    app.kubernetes.io/part-of: convention-workload-with-volumes
    apps.tanzu.vmware.com/workload-type: web
    app.kubernetes.io/component: run
    carto.run/workload-name: convention-workload-with-volumes
spec:
  template:
    metadata:
      annotations:
        conventions.carto.run/applied-conventions: |-
          appliveview-sample/app-live-view-appflavour-check
          multi-purpose-convention/x95castle1.org-carto-run-workload-name
          multi-purpose-convention/x95castle1.org-storage
          spring-boot-convention/auto-configure-actuators-check
          spring-boot-convention/app-live-view-appflavour-check
        developer.conventions/target-containers: workload
        kubectl.kubernetes.io/last-applied-configuration: |
          {"apiVersion":"carto.run/v1alpha1","kind":"Workload","metadata":{"annotations":{},"labels":{"app.kubernetes.io/part-of":"convention-workload-with-volumes","apps.tanzu.vmware.com/workload-type":"web"},"name":"convention-workload-with-volumes","namespace":"jeremy"},"spec":{"params":[{"name":"annotations","value":{"x95castle1.org/storage":"{\"volumes\":[{\"name\":\"config-vol\",\"configMap\":{\"name\":\"log-config\",\"items\":[{\"key\":\"log_level\",\"path\":\"log_level\"}]}}],\"volumeMounts\":[{\"name\":\"config-vol\",\"mountPath\":\"/etc/config\"}]}"}}],"source":{"git":{"ref":{"branch":"main"},"url":"https://github.com/carto-run/app-golang-kpack"}}}}
        x95castle1.org/storage: '{"volumes":[{"name":"config-vol","configMap":{"name":"log-config","items":[{"key":"log_level","path":"log_level"}]}}],"volumeMounts":[{"name":"config-vol","mountPath":"/etc/config"}]}'
      labels:
        app.kubernetes.io/component: run
        app.kubernetes.io/part-of: convention-workload-with-volumes
        apps.tanzu.vmware.com/workload-type: web
        carto.run/workload-name: convention-workload-with-volumes
    spec:
      containers:
      - env:
        - name: CARTO_RUN_WORKLOAD_NAME
          value: convention-workload-with-volumes
        image: registry.harbor.learn.tapsme.org/tap-build/workloads/convention-workload-with-volumes-jeremy@sha256:b8ed71c0ecad262118023bb0e000c830752a92111cdecf6f796db3668ceb3ad0
        name: workload
        resources: {}
        securityContext:
          runAsUser: 1000
        volumeMounts:
        - mountPath: /etc/config
          name: config-vol
      serviceAccountName: default
      volumes:
      - configMap:
          items:
          - key: log_level
            path: log_level
          name: log-config
        name: config-vol

