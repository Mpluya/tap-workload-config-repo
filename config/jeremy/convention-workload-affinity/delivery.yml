apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: convention-workload-affinity
  annotations:
    ootb.apps.tanzu.vmware.com/servicebinding-workload: "true"
    ootb.apps.tanzu.vmware.com/apidescriptor-ref: "true"
    kapp.k14s.io/change-rule: upsert after upserting servicebinding.io/ServiceBindings
  labels:
    app.kubernetes.io/part-of: convention-workload-affinity
    apps.tanzu.vmware.com/workload-type: web
    app.kubernetes.io/component: run
    carto.run/workload-name: convention-workload-affinity
spec:
  template:
    metadata:
      annotations:
        autoscaling.knative.dev/minScale: "1"
        conventions.carto.run/applied-conventions: |-
          appliveview-sample/app-live-view-appflavour-check
          multi-purpose-convention/x95castle1.org-affinity
          spring-boot-convention/auto-configure-actuators-check
          spring-boot-convention/app-live-view-appflavour-check
        developer.conventions/target-containers: workload
        kubectl.kubernetes.io/last-applied-configuration: |
          {"apiVersion":"carto.run/v1alpha1","kind":"Workload","metadata":{"annotations":{},"labels":{"app.kubernetes.io/part-of":"convention-workload-affinity","apps.tanzu.vmware.com/workload-type":"web"},"name":"convention-workload-affinity","namespace":"jeremy"},"spec":{"params":[{"name":"annotations","value":{"autoscaling.knative.dev/minScale":"1","x95castle1.org/affinity":"{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"topology.kubernetes.io/zone\",\"operator\":\"In\",\"values\":[\"antarctica-east1\",\"antarctica-west1\"]}]}]},\"preferredDuringSchedulingIgnoredDuringExecution\":[{\"weight\":1,\"preference\":{\"matchExpressions\":[{\"key\":\"another-node-label-key\",\"operator\":\"In\",\"values\":[\"another-node-label-value\"]}]}}]}}"}}],"source":{"git":{"ref":{"branch":"main"},"url":"https://github.com/carto-run/app-golang-kpack"}}}}
        x95castle1.org/affinity: '{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"topology.kubernetes.io/zone","operator":"In","values":["antarctica-east1","antarctica-west1"]}]}]},"preferredDuringSchedulingIgnoredDuringExecution":[{"weight":1,"preference":{"matchExpressions":[{"key":"another-node-label-key","operator":"In","values":["another-node-label-value"]}]}}]}}'
      labels:
        app.kubernetes.io/component: run
        app.kubernetes.io/part-of: convention-workload-affinity
        apps.tanzu.vmware.com/workload-type: web
        carto.run/workload-name: convention-workload-affinity
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: another-node-label-key
                operator: In
                values:
                - another-node-label-value
            weight: 1
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: topology.kubernetes.io/zone
                operator: In
                values:
                - antarctica-east1
                - antarctica-west1
      containers:
      - image: registry.harbor.learn.tapsme.org/tap-build/workloads/convention-workload-affinity-jeremy@sha256:b8ed71c0ecad262118023bb0e000c830752a92111cdecf6f796db3668ceb3ad0
        name: workload
        resources: {}
        securityContext:
          runAsUser: 1000
      serviceAccountName: default

